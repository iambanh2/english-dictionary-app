rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Categories subcollection
      match /categories/{categoryId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Words subcollection - Fixed logic
      match /words/{wordId} {
        // Allow read operations
        allow read: if request.auth != null && request.auth.uid == userId;
        
        // Allow create operations
        allow create: if request.auth != null && 
                         request.auth.uid == userId &&
                         request.resource.data.userId == userId &&
                         validateWordData(request.resource.data);
        
        // Allow update operations
        allow update: if request.auth != null && 
                         request.auth.uid == userId &&
                         resource.data.userId == userId;
        
        // Allow delete operations
        allow delete: if request.auth != null && 
                         request.auth.uid == userId &&
                         resource.data.userId == userId;
    }
    }
    
    // Validation function for word data
    function validateWordData(data) {
      return data.keys().hasAll(['englishWord', 'vietnameseTranslation', 'categoryId', 'userId']) &&
             data.englishWord is string &&
             data.vietnameseTranslation is string &&
             data.userId is string;
    }
  }
}
